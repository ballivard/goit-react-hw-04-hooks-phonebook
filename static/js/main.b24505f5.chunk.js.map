{"version":3,"sources":["components/ContactForm/Contact.module.css","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onRemoveContact","className","styles","map","contact","ContactList_item","name","number","ContactList_button","type","onClick","id","Filter","value","onChangeFilter","onChange","ContactForm","state","handleChange","e","target","setState","handleSubmit","preventDefault","props","onAddContact","ContactEditor","onSubmit","this","ContactEditor_label","ContactEditor_input","ContactEditor_button","Component","App","savedContacts","useState","setName","setNumber","filter","setFilter","JSON","parse","window","localStorage","getItem","setContacts","useEffect","setItem","stringify","data","some","alert","shortid","generate","currentTarget","toLocaleLowerCase","includes","getVisibleContacts","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b24505f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactEditor\":\"Contact_ContactEditor__3sFbn\",\"ContactEditor_label\":\"Contact_ContactEditor_label__1I12F\",\"ContactEditor_input\":\"Contact_ContactEditor_input__2Fg_w\",\"ContactEditorinput\":\"Contact_ContactEditorinput__1tpBQ\",\"ContactEditor_button\":\"Contact_ContactEditor_button__3HVAc\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <ul className={styles.ContactList}>\n    {contacts.map((contact) => (\n      <li className={styles.ContactList_item} key={contact.id}>\n        {contact.name + \":\" + contact.number}\n        {\n          <button\n            className={styles.ContactList_button}\n            type=\"button\"\n            name=\"delete\"\n            onClick={() => onRemoveContact(contact.id)}\n          >\n            delete\n          </button>\n        }\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Contact.module.css\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onAddContact({ ...this.state });\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    return (\n      <form className={styles.ContactEditor} onSubmit={this.handleSubmit}>\n        <label className={styles.ContactEditor_label}>\n          Name\n          <input\n            className={styles.ContactEditor_input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.ContactEditor_label}>\n          Number\n          <input\n            className={styles.ContactEditor_input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.ContactEditor_button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport \"./App.css\";\n\nfunction App() {\n  const savedContacts = [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ];\n  \n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [contacts, setContacts] = useState(() => {\n    return (\n      JSON.parse(window.localStorage.getItem(\"contacts\")) ?? savedContacts\n    );\n  });\n\n  useEffect(() => {\n    const contacts = window.localStorage.getItem(\"contacts\");\n    if (contacts) {\n      setContacts(JSON.parse(contacts));\n    } else setContacts(savedContacts);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  \n  const addContact = (data) => {\n    if (contacts.some((contact) => contact.name === data.name)) {\n      alert(`${data.name} already exists`);\n      return;\n    }\n\n    setContacts((contacts) => {\n      const newContact = {\n        id: shortid.generate(),\n        ...data,\n      };\n      return [newContact, ...contacts];\n    });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n    );\n  };\n\n  const removeContact = (contactId) => {\n    setContacts(contacts.filter(({ id }) => id !== contactId));\n  };\n\n  return (\n    <>\n    <div className=\"Container\">\n      <div className=\"Container2\">\n        <h1>Phonebook</h1>\n\n        <ContactForm onAddContact={addContact} />\n        <h2>Contacts</h2>\n        <Filter onChangeFilter={changeFilter} />\n        <ContactList\n          contacts={getVisibleContacts(contacts, filter)}\n          onRemoveContact={removeContact} \n        />\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__qgYQ1\",\"ContactList_item\":\"ContactList_ContactList_item__2n-As\",\"completed\":\"ContactList_completed__3Shdq\",\"ContactList_text\":\"ContactList_ContactList_text__GYJIA\",\"ContactList_actions\":\"ContactList_ContactList_actions__qyEby\",\"ContactList_button\":\"ContactList_ContactList_button__1JHZm\"};"],"sourceRoot":""}